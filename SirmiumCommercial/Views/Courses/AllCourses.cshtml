@model AllCourse

@{
    Layout = "_UserLayout";
    ViewData["Title"] = "All Courses";
}

@section Styles {
    <environment names="Development,Staging,Production">
        <link rel="stylesheet" href="~/lib_local/css_local/UserLocal.css" />
    </environment>
}
<style type="text/css">
    .videoBtn {
        display: none;
        position: absolute;
        transform: translateY(-90%) translateX(-50%);
    }

    .img-video:hover + .videoBtn {
        display: inline;
    }

    .videoBtn:hover {
        display: inline;
    }
</style>

<div id="topNav" class="nav navbar">
    <div class="navbar-left m-l">
        <ul class="nav navbar-nav no-borders">
            <li>
                <h2><strong>@ViewData["Title"]</strong></h2>
            </li>
        </ul>
        <ul class="nav navbar-nav no-borders">
            <li class="dropdown">
                <a class="dropdown-toggle label-menu-corner" href="#" data-toggle="dropdown">
                    <span class="text-primary"> Sort by: </span>
                    @ViewData["Sort"]
                    @if (ViewData["order"].ToString() == "asc")
                    {
                        <i class="fas fa-sort-alpha-down"></i>
                    }
                    else
                    {
                        <i class="fas fa-sort-alpha-down-alt"></i>
                    }
                    <span class="fa fa-caret-down"></span>
                </a>
                <ul class="dropdown-menu hdropdown animated flipInX">
                    <li>
                        <a href="@Url.Action("AllCourses", "Courses",
                                new
                                {
                                    userId = ViewData["Id"],
                                    sort = "Title",
                                    order = "asc"
                                })">
                            <strong>Title Asc</strong>
                        </a>
                    </li>
                    <li>
                        <a href="@Url.Action("AllCourses", "Courses",
                                new
                                {
                                    userId = ViewData["Id"],
                                    sort = "Title",
                                    order = "desc"
                                })">
                            <strong>Title Desc</strong>
                        </a>
                    </li>
                    <li>
                        <a href="@Url.Action("AllCourses", "Courses",
                                new
                                {
                                    userId = ViewData["Id"],
                                    sort = "End Date",
                                    order = "asc"
                                })">
                            <strong>End Date Asc</strong>
                        </a>
                    </li>
                    <li>
                        <a href="@Url.Action("AllCourses", "Courses",
                                new
                                {
                                    userId = ViewData["Id"],
                                    sort = "End Date",
                                    order = "desc"
                                })">
                            <strong>End Date Desc</strong>
                        </a>
                    </li>
                    <li>
                        <a href="@Url.Action("AllCourses", "Courses",
                                new
                                {
                                    userId = ViewData["Id"],
                                    sort = "Date Added",
                                    order = "asc"
                                })">
                            <strong>Date Added Asc</strong>
                        </a>
                    </li>
                    <li>
                        <a href="@Url.Action("AllCourses", "Courses",
                                new
                                {
                                    userId = ViewData["Id"],
                                    sort = "Date Added",
                                    order = "desc"
                                })">
                            <strong>Date Added Desc</strong>
                        </a>
                    </li>
                </ul>
            </li>
        </ul>
    </div>
</div>

@foreach (Course course in Model.Courses)
{
<div class="col-md-12 m-b-md m-r-md">
    <div class="col-lg-3 p-xxs text-center courseCardEndDate">
        <h1><span class="text-big @course.AwardIcon"></span></h1>
        <h3>@Model.DateDifference(DateTime.Now, course.DateAdded)</h3>
        <h4>
            <span class="fa fa-clock-o"></span>
            @if (course.EndDate != DateTime.MinValue)
            {
                @if (DateTime.Now > course.EndDate)
                {
                    <span class="text-danger">
                        FINISHED
                    </span>
                }
                else
                {
                    <span class="text-danger">
                        End in
                        @Model.DateDifference(course.EndDate,
                                DateTime.Now).Replace("ago", "")
                    </span>
                }
            }
            else
            {
                <span class="text-success">
                    NO END DATE
                </span>

            }
        </h4>
    </div>
    <div class="col-md-9">
        <div class="col-lg-3 text-center m-t-sm">
            <img src="~/imgAlt.jpg" alt="video" class="img-video"
                 style="z-index: 2" />
            <div class="text-center img-video videoBtn" style="z-index: 1">
                <button class="btn btn-sm btn-primary2 p-xs">
                    <span class="fa fa-play" style="
        font-size: xx-large"></span>
                </button>
            </div>
        </div>
        <div class="col-md-4 m-t-sm">
            <h2>@course.Title</h2>
            <h4>
                by:
                @if (Model.Courses.Where(c => c.CreatedBy != null
                      && c.CourseId == course.CourseId).Any())
                {
                    var user = Model.Courses.Where(c => c.CreatedBy != null
                        && c.CourseId == course.CourseId).Select(c => c.CreatedBy)
                        .FirstOrDefault();
                    <span class="text-info">
                        &#64;@user.UserName
                    </span>
                }
                else
                {
                    <span class="text-info"> &#64;SirmiumCommercial</span>
                }
            </h4>
            <h5>
                @if (Model.Users.Where(u => u.CourseId == course.CourseId).Count() == 1)
                {
                    @Model.Users.Where(u => u.CourseId == course.CourseId).Count()
                    <span> participant</span>
                }
                else
                {
                    @Model.Users.Where(u => u.CourseId == course.CourseId).Count()
                    <span> participants</span>
                }
            </h5>
        </div>
        <div class="col-md-3 pull-right m-t-sm">
            @if (course.Users != null)
            {
                if (course.Users.Select(u => u.AppUserId == ViewData["Id"]).Any())
                {
                    <span class="badge badge-primary">My course</span>
                }
            }
            @if ((DateTime.Now > course.EndDate) &&
            (course.EndDate != DateTime.MinValue))
            {
                <button class="btn btn-primary" disabled>
                    <span class="fa fa-plus"></span>
                    Participate
                </button>
            }
            else
            {
                <a href="@Url.Action("Participate", "Courses",
                        new { id = ViewData["Id"],
                              courseId = course.CourseId})"
                   class="btn btn-primary">
                    <span class="fa fa-plus"></span>
                    Participate
                </a>
            }
            <a href="@Url.Action("CourseDetails", "Courses",
                        new { id = ViewData["Id"],
                              courseId = course.CourseId})"
               class="btn btn-outline btn-info">
                 Details
            </a>
        </div>
    </div>
</div>
}
