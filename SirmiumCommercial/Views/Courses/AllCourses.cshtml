@model AllCoursesViewModel

@{
    Layout = "_UserLayout";

    string isSelectedSort (string sort, string order)
    {
        if (sort == ViewData["Sort"].ToString()
            && order == ViewData["Order"].ToString())
        {
            return " text-bold text-primary";
        }
        else
        {
            return "";
        }
    }

    string firstLastNameExists(AppUser user)
    {
        return (user.FirstName == null || user.LastName == null) ?
            user.UserName : user.FirstName + " " + user.LastName;
    }

    string userPhoto (string path)
    {
        return (path == null) ? "/defaultAvatar.png" : $"/UsersData/{path}";
    }

    string rating(double avgRating)
    {
        var returnStr = "";

        if (avgRating == 0)
        {
            returnStr = "<strong class='text-muted' >Average Rating: </strong>";
            returnStr += "<strong style='color: #868686'>Not Rated Yet </strong>";
        }
        else
        {
            returnStr += "<strong class='text-muted'>Average Rating: </strong>";
            for (var i = 0; i < Math.Round(avgRating, MidpointRounding.ToEven); i++)
            {
                returnStr += "<span class='fa fa-star text-warning'></span>";
            }
            if (avgRating < 5)
            {
                for (var i = Math.Round(avgRating, MidpointRounding.ToEven); i < 5; i++)
                {
                    returnStr += "<span class='fa fa-star text-muted'></span>";
                }
            }
            returnStr += $"<span>&emsp; {String.Format("{0:0.0}", avgRating)} / 5.0 </span>";
        }

        return returnStr;
    }
}

@section Styles {
    <environment names="Development,Staging,Production">
        <link rel="stylesheet" href="~/lib_local/css_local/UserLocal.css" />
        <link rel="stylesheet" href="~/lib_local/videoPlayer/videoPlayer.css" />
    </environment>
}
<style type="text/css">
    .videoBtn {
        display: none;
        position: absolute;
        top: 38%;
        left: 2%;
    }

    .img-video:hover + .videoBtn {
        display: inline;
    }

    .videoBtn:hover {
        display: inline;
    }

    #video-video:hover {
        opacity: 0.4;
    }

    #video-videoBtn:hover > #video-video{
        opacity: 0.4;
    }

    #all-users{
        height: 200px;
        width: 200px;
        overflow-y: scroll;
    }
</style>


<div class="normalheader p-sm">
    <div class="hpanel">
        <div class="panel-body" style="font-size: 30px;">
            <span class="fa fa-book"></span>
            <strong>@ViewData["Title"]</strong>
            <span>&emsp;</span>
            <a href="#" class="pull-right btn"
               data-toggle="collapse" data-target="#collapseExample"
               aria-expanded="false" aria-controls="collapseExample">
                <span class="pe-7s-edit" style="font-size: 25px; color: #000000"></span>
                <span class="text-muted" style="font-size: 20px;">Filter</span>
            </a>
        </div>
        <div class="collapse " id="collapseExample">
            <div class="well well-lg row m-l-xs m-r-xs">
                <div class="col-sm-3">
                    <h4 class="font-bold">Sort:</h4>
                    <ul style="list-style-type: square; font-size: 20px; font-weight: 500">
                        <li>
                            <a href="@Url.Action(ViewData["CurrentAction"].ToString(), "Courses",
                                new
                                {
                                    userId = ViewData["Id"],
                                    sort = "Title",
                                    order = "asc"
                                })">
                                <span class="text-muted @isSelectedSort("Title", "asc")">
                                    Title Asc
                                </span>
                            </a>
                        </li>
                        <li>
                            <a href="@Url.Action(ViewData["CurrentAction"].ToString(), "Courses",
                                new
                                {
                                    userId = ViewData["Id"],
                                    sort = "Title",
                                    order = "desc"
                                })">
                                <span class="text-muted @isSelectedSort("Title", "desc")">
                                    Title Desc
                                </span>
                            </a>
                        </li>
                        <li>
                            <a href="@Url.Action(ViewData["CurrentAction"].ToString(), "Courses",
                                new
                                {
                                    userId = ViewData["Id"],
                                    sort = "End Date",
                                    order = "asc"
                                })">
                                <span class="text-muted @isSelectedSort("End Date", "asc")">
                                    End Date Asc
                                </span>
                            </a>
                        </li>
                        <li>
                            <a href="@Url.Action(ViewData["CurrentAction"].ToString(), "Courses",
                                new
                                {
                                    userId = ViewData["Id"],
                                    sort = "End Date",
                                    order = "desc"
                                })">
                                <span class="text-muted @isSelectedSort("End Date", "desc")">
                                    End Date Desc
                                </span>
                            </a>
                        </li>
                        <li>
                            <a href="@Url.Action(ViewData["CurrentAction"].ToString(), "Courses",
                                new
                                {
                                    userId = ViewData["Id"],
                                    sort = "Date Added",
                                    order = "asc"
                                })">
                                <span class="text-muted @isSelectedSort("Date Added", "asc")">
                                    Date Added Asc
                                </span>
                            </a>
                        </li>
                        <li>
                            <a href="@Url.Action(ViewData["CurrentAction"].ToString(), "Courses",
                                new
                                {
                                    userId = ViewData["Id"],
                                    sort = "Date Added",
                                    order = "desc"
                                })">
                                <span class="text-muted @isSelectedSort("Date Added", "desc")">
                                    Date Added Desc
                                </span>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@foreach (AllCourses content in Model.Content)
{
<div class="row m-l-md m-r-md">
    <div class="col-lg-12">
        <div class="hpanel m-b-xs">
            <div class="panel-heading">
                <div class="panel-tools">
                    <a class="showhide"><i class="fa fa-chevron-up"></i></a>
                </div>
                <a href="@Url.Action("CourseDetails", "Courses",
                                    new { id = ViewData["Id"],
                                    courseId = content.Course.CourseId})">
                    <span style="font-size: 18px">
                        <strong class="@content.Course.AwardIcon" style="font-size: 25px"></strong>&emsp;
                        @content.Course.Title
                    </span>
                </a>
            </div>
            <div class="panel-body" style="padding-bottom: 5px;">
                <div class="row">
                    @if (content.Video != null)
                    {
                        <div class="col-lg-3">
                            <div id="video-videoBtn"
                                 style="background-color: #0c0830; padding:0px">
                                <video src="@content.Video.VideoPath" class="img-video"
                                       style="z-index: 1" id="video-video"></video>
                                <div class="text-center img-video videoBtn" style="z-index: 1">
                                    <a href="@Url.Action("Index", "Recorder",
                                    new { id = ViewData["Id"], videoId = content.Video.Id })"
                                       class="btn btn-sm btn-primary2 p-xs">
                                        <span style="font-weight: 400; font-size: 18px">Watch</span>
                                        <span class="fa fa-play" style="font-size: 18px"></span>
                                    </a>
                                </div>
                            </div>
                            <div class="text-center p-xxs" style="font-size: 17px;">
                                <span class="text-muted">@content.Video.Views Views</span>
                                <span>&emsp;</span>
                                @if (content.Likes.Count() > 0)
                                {
                                    <span class="dropdown">
                                        <a class="dropdown-toggle" data-toggle='dropdown' href="#">
                                            <span class="fa fa-thumbs-up text-muted"
                                                  style="font-weight: 300"></span>
                                            <span class="text-muted">@content.Likes.Count()</span>
                                        </a>
                                        <span class="dropdown-menu hdropdown p-xs
                                                      bigmenu animated flipInX"
                                              style="padding: 0px;" id="all-users">
                                            @foreach (AppUser user in content.Likes)
                                            {
                                                <a href="@Url.Action("UserProfile", "User",
                                                                new { id = ViewData["Id"],
                                                                    userId = user.Id
                                                                })" style="margin: 0px;">
                                                    <img class="img-circle m-b-xs"
                                                         style="width: 30px; height: 30px"
                                                         src="@userPhoto(user.ProfilePhotoUrl)" />
                                                    <span class="m-b-xs">@firstLastNameExists(user)</span>
                                                </a>
                                                <br />
                                            }
                                        </span>
                                    </span>
                                }
                                else
                                {
                                    <span class="fa fa-thumbs-up text-muted"
                                          style="font-weight: 300"></span>
                                    <span class="text-muted">0</span>
                                }
                                <span>&emsp;</span>
                                @if (content.Dislikes.Count() > 0)
                                {
                                    <span class="dropdown">
                                        <a class="dropdown-toggle" data-toggle='dropdown' href="#">
                                            <span class="fa fa-thumbs-down text-muted"
                                                  style="font-weight: 300"></span>
                                            <span class="text-muted">@content.Dislikes.Count()</span>
                                        </a>
                                        <span class="dropdown-menu hdropdown p-xs
                                                      bigmenu animated flipInX"
                                              style="padding: 0px;" id="all-users">
                                            @foreach (AppUser user in content.Dislikes)
                                            {
                                                <a href="@Url.Action("UserProfile", "User",
                                                                new { id = ViewData["Id"],
                                                                    userId = user.Id
                                                                })" style="margin: 0px;">
                                                    <img class="img-circle m-b-xs"
                                                         style="width: 30px; height: 30px"
                                                         src="@userPhoto(user.ProfilePhotoUrl)" />
                                                    <span class="m-b-xs">@firstLastNameExists(user)</span>
                                                </a>
                                                <br />
                                            }
                                        </span>
                                    </span>
                                }
                                else
                                {
                                    <span class="fa fa-thumbs-down text-muted"
                                          style="font-weight: 300"></span>
                                    <span class="text-muted">0</span>
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="col-lg-3">
                            <div class="text-center p-lg" style="width: 100%; height: 80%;
                                    background-color: #bbbbbb;">
                                <strong style="color:#34495e; font-size:20px;
                                            font-family: 'Open Sans','Helvetica Neue',
                                            Helvetica,Arial,sans-serif; ">
                                    SirmiumCommercial
                                </strong>
                                <br />
                                <br />
                                <i style="font-size: 45px; color:#5b80a4;" class="fas fa-video-slash"></i>
                                <br />
                                <strong style="font-size: 25px; color:#5b80a4;">NO VIDEO</strong>
                            </div>
                        </div>
                    }
                    <div class="col-lg-4">
                        <h5 class="text-muted">Created by:</h5>
                        <h4 class="text-info font-bold">
                            <img class="img-circle" style="width: 30px; height: 30px"
                                 src="@userPhoto(content.Course.CreatedBy.ProfilePhotoUrl)" />
                            <a href="@Url.Action("UserProfile", "User",
                                    new { id = ViewData["Id"], userId = content.Course.CreatedBy.Id })">
                                @firstLastNameExists(content.Course.CreatedBy)
                            </a>
                        </h4>
                        <h5 class="text-muted">Published on: </h5>
                        <h4>@content.Course.DateAdded.ToLongDateString()</h4>
                        <h5 class="text-muted">End in: </h5>
                        <h4>@Html.Raw(Model.DateDifference(content.Course.EndDate))</h4>
                    </div>
                    <div class="col-lg-3">
                        <h5 class="text-muted">Users on course: </h5>
                        @if (content.UsersOnCourse.Count() == 0)
                        {
                            <strong class="text-muted">
                                There are no users on this course
                            </strong>
                        }

                        @foreach (AppUser user in content.UsersOnCourse.Take(4))
                        {
                            <a href="@Url.Action("UserProfile", "User",
                                            new { id = ViewData["Id"],
                                                userId = user.Id
                                            })" style="margin: 0px;">
                                <img class="img-circle"
                                     style="width: 30px; height: 30px"
                                     src="@userPhoto(user.ProfilePhotoUrl)"
                                     data-toggle='tooltip' data-placement='bottom'
                                     title="@firstLastNameExists(user)" />
                            </a>
                        }
                        @if (content.UsersOnCourse.Count() > 4)
                        {
                            <br />
                            @foreach (AppUser user in content.UsersOnCourse
                                         .Skip(4).Take(3))
                            {
                                <a href="@Url.Action("UserProfile", "User",
                                                new
                                                {
                                                    id = ViewData["Id"],
                                                    userId = user.Id
                                                })" style="margin: 0px;">
                                    <img class="img-circle"
                                         style="width: 30px; height: 30px"
                                         src="@userPhoto(user.ProfilePhotoUrl)"
                                         data-toggle='tooltip' data-placement='bottom'
                                         title="@firstLastNameExists(user)" />
                                </a>

                            }
                            @if (content.UsersOnCourse.Count() > 7)
                            {
                                <span class="dropdown">
                                    <a class="dropdown-toggle btn btn-circle"
                                       style="width: 30px; background: #bbbbbb"
                                       data-toggle='dropdown' href="#">
                                        <span class="pe-7s-more"></span>
                                    </a>
                                    <span class="dropdown-menu hdropdown p-xs
                                                      bigmenu animated flipInX"
                                          style="padding: 0px;" id="all-users">
                                        @foreach (AppUser user in content.UsersOnCourse.Skip(7))
                                        {
                                            <a href="@Url.Action("UserProfile", "User",
                                                    new
                                                    {
                                                        id = ViewData["Id"],
                                                        userId = user.Id
                                                    })" style="margin: 0px;">
                                                <img class="img-circle m-b-xs"
                                                     style="width: 30px; height: 30px"
                                                     src="@userPhoto(user.ProfilePhotoUrl)" />
                                                <span class="m-b-xs">@firstLastNameExists(user)</span>
                                            </a>
                                            <br />
                                        }
                                    </span>
                                </span>
                            }
                        }
                    </div>
                    <div class="col-lg-2 text-center">
                        @if (content.UsersOnCourse
                         .FirstOrDefault(u => u.Id == ViewData["Id"].ToString()) != null)
                        {
                            <a href="@Url.Action("MyCourses", "Courses",
                                    new { id = ViewData["Id"], sort = "Date Added",
                                        order = "desc"})"
                               class="btn btn-primary m-b-sm">
                                <span class="fas fa-check"></span> My course
                            </a>
                        }
                        else
                        {
                            @if ((DateTime.Now > content.Course.EndDate) &&
                           (content.Course.EndDate != DateTime.MinValue))
                            {
                                <button class="btn btn-primary m-b-sm" disabled>
                                    <span class="fa fa-plus"></span>
                                    Participate
                                </button>
                            }
                            else
                            {
                                <a href="@Url.Action("Participate", "Courses",
                                         new { id = ViewData["Id"],
                                        courseId = content.Course.CourseId})"
                                   class="btn btn-primary m-b-sm"
                                   onclick="participateFunction('@ViewData["Id"]', @content.Course.CourseId);">
                                    <span class="fa fa-plus"></span>
                                    Participate
                                </a>
                            }
                        }
                        <a href="@Url.Action("CourseDetails", "Courses",
                                    new { id = ViewData["Id"],
                                    courseId = content.Course.CourseId})"
                           class="m-b-sm btn">
                            <span class="fas fa-info text-info" style="font-size: 20px;"></span>
                            <span class="text-muted" style="font-size: 20px;">Details</span>
                        </a>
                    </div>
                </div>
            </div>
            <div class="panel-footer" style="font-size: 18px;">
                @Html.Raw(rating(content.CourseAverageRating))
            </div>
        </div>
    </div>
</div>
}

@section Scripts {
    <environment names="Development,Staging,Production">
        <script src="~/lib_local/videoPlayer/videoPlayer.js"></script>
    </environment>

    <script>
        //notification hub
        var connectionNotificatinoAllCourses = new signalR.HubConnectionBuilder().withUrl("/notificationHub").build();

        //start connection for notification hub
        connectionNotificatinoAllCourses.start().then(function () {
            console.log("Connected: --notification hub : AllCourses--");
        }).catch(function (err) {
            return console.error(err.toString());
        });

        function participateFunction(currentUserId, courseId) {
            connectionNotificatinoAllCourses.invoke("Participate", currentUserId, courseId).catch(function (err) {
                return console.error(err.toString());
            });
        };
    </script>
}