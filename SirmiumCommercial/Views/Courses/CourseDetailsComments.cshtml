@model CourseViewModel

@{
    Layout = "_UserLayout";
    ViewData["Title"] = Model.Course.Title;
    var borderTop = new List<String>{"hviolet", "hred", "hgreen", "hyellow",
            "hblue", "hnavyblue", "horange", "hreddeep"};
    ViewData["For"] = "Course";
    ViewData["ForId"] = Model.Course.CourseId;
}

@section Styles {
    <environment names="Development,Staging,Production">
        <link rel="stylesheet" href="~/lib_local/css_local/UserLocal.css" />
        <link rel="stylesheet" href="~/lib_local/courseDetails/courseDetails.css" />
    </environment>
    <style>
        textarea{
            resize: none;
            overflow-y: scroll;
        }
    </style>
}

<!--Warning Window-->
<div id="customWarningDialog"></div>

<!--Course details-->
<div class="row m-b-n">
    <div class="col-lg-12">
        <div class="hpanel">
            <div class="panel-heading">
                <div class="panel-tools">
                    <a class="showhide"><i class="fa fa-chevron-up" style="font-size:20px"></i></a>
                </div>
                <h2 class="m-n">
                    <span class="@Model.Course.AwardIcon"></span>
                    <span class="text-primary">@Model.Course.Title</span> details
                </h2>
            </div>
            <div class="panel-body">
                @Html.Partial("Details", Model)
            </div>
        </div>
    </div>
</div>

@await Component.InvokeAsync("CourseDetailsNav", new { courseId = Model.Course.CourseId, userId = ViewData["Id"] })

<div id="allCommentsPartial">
    @await Component.InvokeAsync("Comment", new { For = "Course", forId = Model.Course.CourseId })
</div>

<input id="userId" value="@ViewData["Id"]" hidden />
<input id="forId" value="@Model.Course.CourseId" hidden />
<input id="current-user-photo" value="@Model.User.ProfilePhotoUrl" hidden />

@section Scripts {
    <environment names="Development,Staging,Production">
        <script src="~/lib_local/comment-hub/comment-hub.js"></script>
        <script>
            var commentFor = "Course";
            var currentUser = document.getElementById('userId').value;
            var commentForId = document.getElementById('forId').value;

            //notification hub
            var connectionNotificatinoAllCourses = new signalR.HubConnectionBuilder().withUrl("/notificationHub").build();

            //start connection for chatHub - chat header
            connectionNotificatinoAllCourses.start().then(function () {
                console.log("Connected: --notification hub : CourseDetails--");
            }).catch(function (err) {
                return console.error(err.toString());
            });

            function participateFunction(currentUserId, courseId) {
                connectionNotificatinoAllCourses.invoke("Participate", currentUserId, courseId).catch(function (err) {
                    return console.error(err.toString());
                });
            };
        </script>
    </environment>
}