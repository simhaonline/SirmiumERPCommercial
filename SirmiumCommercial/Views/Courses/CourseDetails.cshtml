@model CourseViewModel

@{
    Layout = "_UserLayout";
    ViewData["Title"] = Model.Course.Title;
    ViewData["For"] = "Course";
    ViewData["ForId"] = Model.Course.CourseId;
}

@section Styles {
    <environment names="Development,Staging,Production">
        <link rel="stylesheet" href="~/lib_local/css_local/UserLocal.css" />
        <link rel="stylesheet" href="~/lib_local/courseDetails/courseDetails.css" />
    </environment>
}

<!--Msg window-->
@if (TempData["sccMsgCourse"] != null)
{
    <div id="msgWindowSuccess">
        <input value="@TempData["sccMsgCourse"]" id="windowMsg" hidden />
    </div>
}
@if (TempData["errMsgCourse"] != null)
{
    <div id="msgWindowError">
        <input value="@TempData["errMsgCM"]" id="windowMsg" hidden />
    </div>
}

<!--Course details-->
<div class="row m-b-n">
    <div class="col-lg-12">
        <div class="hpanel">
            <div class="panel-heading">
                <div class="panel-tools">
                    <a class="showhide"><i class="fa fa-chevron-up" style="font-size:20px"></i></a>
                </div>
                <h2 class="m-n">
                    <span class="@Model.Course.AwardIcon"></span>
                    <span class="text-primary">@Model.Course.Title</span> details
                </h2>
            </div>
            <div class="panel-body">
                @Html.Partial("Details", Model)
            </div>
        </div>
    </div>
</div>

@await Component.InvokeAsync("CourseDetailsNav", new { courseId = Model.Course.CourseId, userId = ViewData["Id"] })

@if (Model.Course.Presentations.Count() == 0)
{
    <div class="col-lg-12 navbar bg-info">
        <span class="navbar-brand">No Presentation</span>
    </div>
}
else
{
    var i = 0;
    foreach (Presentation p in Model.Course.Presentations.OrderBy(p => p.Part))
    {
        var partColor = new List<String>{"text-primary", "text-primary-2", "text-info",
                            "text-success", "text-warning", "text-danger"};
        <div class="col-lg-12 m-b-sm coursCardManage">
            <div class="col-lg-1 text-center">
                <h4 class="@partColor[i]">PART</h4>
                <h1><span class="text-big @partColor[i]">@p.Part</span></h1>
                @if (i == 5)
                {
                    i = 0;
                }
                else
                {
                    i++;
                }
            </div>
            <div class="col-lg-4">
                <h1>@p.Title</h1>
                <h5>
                    <span class="fa fa-plus-circle"></span>
                    Added:
                    <span class="text-success">
                        @p.DateAdded.Date.ToShortDateString()
                    </span>
                </h5>
                <h5>
                    <span class="fa fa-pencil-square-o"></span>
                    Date modified:
                    <span class="text-info">
                        @p.DateModified.Date.ToShortDateString()
                    </span>
                </h5>
            </div>
            <div class="col-lg-5 borderDashed">
                <h4>Description:</h4>
                <span class="text-info">@p.Description</span>
                <br />
                <br />
            </div>
            <div class="col-lg-2 text-center">
                @if (Model.UsersOnCourse
                  .FirstOrDefault(u => u.Id == ViewData["Id"].ToString()) != null)
                {
                    @if (p.VideoId != 0)
                    {
                        <a class="btn btn-primary2"
                           href="@Url.Action("Index", "Recorder", 
                                new { id = ViewData["Id"], videoId = p.VideoId })">
                            Watch <span class="pe pe-7s-play"></span>
                        </a>
                    }
                    @await Component.InvokeAsync("CourseNewRepresentation",
                                    new { courseId = Model.Course.CourseId,
                                        presentationId = p.PresentationId,
                                        userId = ViewData["Id"] })
                }
            </div>
        </div>
    }
}


@section Scripts {
    <environment names="Development,Staging,Production">
    </environment>
}