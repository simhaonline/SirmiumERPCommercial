@model IQueryable<Course>

@{
    Layout = "_UserLayout";
    ViewData["Title"] = "Manage";
}

@section Styles {
    <environment names="Development,Staging,Production">
        <link rel="stylesheet" href="~/lib_local/css_local/UserLocal.css" />
    </environment>
}


<div id="customSuccessWindow"></div>

<div id="topNav" class="nav navbar">
    <div class="navbar-left m-l">
        <ul class="nav navbar-nav no-borders">
            <li>
                <h2><strong>@ViewData["Title"] - Courses</strong></h2>
            </li>
        </ul>
        <ul class="nav navbar-nav no-borders">
            <li class="dropdown">
                <a class="dropdown-toggle label-menu-corner" href="#" data-toggle="dropdown">
                    <span class="text-primary"> Status: </span>
                    <span>@ViewData["Status"]</span>
                    <span class="fa fa-caret-down"></span>
                </a>
                <ul class="dropdown-menu hdropdown animated flipInX">
                    <li>
                        <a href="@Url.Action("Index", "Manage",
                                new {
                                    userId = ViewData["Id"],
                                    status = "Public",
                                    sort = "Title",
                                    order = "asc"
                                })">
                            <strong>Public</strong>
                        </a>
                    </li>
                    <li>
                        <a href="@Url.Action("Index", "Manage",
                                new {
                                    userId = ViewData["Id"],
                                    status = "All",
                                    sort = "Title",
                                    order = "asc"
                                })">
                            <strong>All</strong>
                        </a>
                    </li>
                    <li>
                        <a href="@Url.Action("Index", "Manage",
                                new {
                                    userId = ViewData["Id"],
                                    status = "Private",
                                    sort = "Title",
                                    order = "asc"
                                })">
                            <strong>Private</strong>
                        </a>
                    </li>
                </ul>
            </li>
        </ul>
        <ul class="nav navbar-nav no-borders">
            <li class="dropdown">
                <a class="dropdown-toggle label-menu-corner" href="#" data-toggle="dropdown">
                    <span class="text-primary"> Sort by: </span>
                    <span>
                        @ViewData["Sort"]
                        @if (ViewData["order"].ToString() == "asc")
                        {
                            <i class="fas fa-sort-alpha-down"></i>
                        }
                        else
                        {
                            <i class="fas fa-sort-alpha-down-alt"></i>
                        }
                        <span class="fa fa-caret-down"></span>
                </a>
                <ul class="dropdown-menu hdropdown animated flipInX">
                    <li>
                        <a href="@Url.Action("Index", "Manage",
                                new
                                {
                                    userId = ViewData["Id"],
                                    status = ViewData["Status"],
                                    sort = "Title",
                                    order = "asc"
                                })">
                            <strong>Title Asc</strong>
                        </a>
                    </li>
                    <li>
                        <a href="@Url.Action("Index", "Manage",
                                new
                                {
                                    userId = ViewData["Id"],
                                    status = ViewData["Status"],
                                    sort = "Title",
                                    order = "desc"
                                })">
                            <strong>Title Desc</strong>
                        </a>
                    </li>
                    <li>
                        <a href="@Url.Action("Index", "Manage",
                                new
                                {
                                    userId = ViewData["Id"],
                                    status = ViewData["Status"],
                                    sort = "End Date",
                                    order = "asc"
                                })">
                            <strong>End Date Asc</strong>
                        </a>
                    </li>
                    <li>
                        <a href="@Url.Action("Index", "Manage",
                                new
                                {
                                    userId = ViewData["Id"],
                                    status = ViewData["Status"],
                                    sort = "End Date",
                                    order = "desc"
                                })">
                            <strong>End Date Desc</strong>
                        </a>
                    </li>
                    <li>
                        <a href="@Url.Action("Index", "Manage",
                                new
                                {
                                    userId = ViewData["Id"],
                                    status = ViewData["Status"],
                                    sort = "Date Added",
                                    order = "asc"
                                })">
                            <strong>Date Added Asc</strong>
                        </a>
                    </li>
                    <li>
                        <a href="@Url.Action("Index", "Manage",
                                new
                                {
                                    userId = ViewData["Id"],
                                    status = ViewData["Status"],
                                    sort = "Date Added",
                                    order = "desc"
                                })">
                            <strong>Date Added Desc</strong>
                        </a>
                    </li>
                </ul>
            </li>
        </ul>
    </div>

    <div class="text-center pull-right m-r-sm m-t-sm">
        <a href="@Url.Action("NewCourse", "Manage", new { id = ViewData["Id"] })"
           class="btn btn-success btn-outline pull-right">
            <span class="fa fa-plus"></span>
            Add Course
        </a>
    </div>
</div>

@if (TempData["message"] != null)
{
    <input value="@TempData["message"].ToString()" id="msgText" hidden/>
    <script>
        var msg = document.getElementById('msgText').value;
        window.onload = function() {
            CustomSuccessWindow.show(msg);
        };
    </script>
    @*<div class="row text-center">
            <h4 class="bg-info text-danger">
                <i class="fas fa-info-circle"></i> @TempData["message"]
            </h4>
        </div>*@
}

@foreach (Course c in Model)
{
    <div class="col-lg-12 m-b-sm coursCardManage">
        <div class="col-lg-1 text-center">
            <h1><span class="text-big @c.AwardIcon"></span></h1>
        </div>
        <div class="col-lg-3">
            <h1>@c.Title</h1>
            <h4>
                by:
                @if (Model.Where(co => co.CreatedBy != null
                   && co.CourseId == c.CourseId).Any())
                {
                    var user = Model.Where(co => co.CreatedBy != null
                        && co.CourseId == c.CourseId).Select(u => u.CreatedBy)
                        .FirstOrDefault();
                    <span class="text-info">
                        &#64;@user.UserName
                    </span>
                }
                else
                {
                    <span class="text-info"> &#64;SirmiumCommercial</span>
                }
            </h4>
        </div>
        <div class="col-lg-3">
            <h4>
                <span class="fa fa-plus-circle"></span>
                Added:
                <span class="text-info">
                    @c.DateAdded.Date.ToShortDateString()
                </span>
            </h4>
            <h4>
                <span class="fa fa-pencil-square-o"></span>
                Date modified:
                <span class="text-warning">
                    @c.DateModified.Date.ToShortDateString()
                </span>
            </h4>
            <h4>
                <span class="fa fa-clock-o"></span>
                End Date:
                @if (c.EndDate == DateTime.MinValue)
                {
                    <span class="text-success">NO END DATE</span>
                }
                else
                {
                    <span class="text-danger">@c.EndDate.Date.ToShortDateString()</span>
                }
            </h4>
        </div>
        <div class="col-lg-1">
        </div>
        <div class="col-lg-3">
            <a href="@Url.Action("CourseManage", "Manage",
                    new { id = ViewData["Id"], courseId = c.CourseId })"
               class="btn btn-info btn-outline">
                Details
            </a>
            @if ((DateTime.Now > c.EndDate) && (c.EndDate != DateTime.MinValue))
            {
                <h4>
                    <span class="badge badge-danger text-warning" style="font-size:16px">
                        <b>FINISHED</b>
                    </span>
                </h4>
            }
        </div>
    </div>
}
