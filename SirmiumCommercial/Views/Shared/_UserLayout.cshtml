<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - SirmiumERPCommercial</title>

    <!-- Add local styles-->
    @if (IsSectionDefined("Styles"))
    {@RenderSection("Styles", required: false)}

    <environment names="Development">
        <link rel="stylesheet" href="~/homer/lib_local/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="~/homer/lib/fontawesome/css/font-awesome.css" />
        <link rel="stylesheet" href="~/homer/lib/animate.css/animate.css" />
        <link rel="stylesheet" href="~/homer/Icons/pe-icon-7-stroke/css/pe-icon-7-stroke.css" />
        <link rel="stylesheet" href="~/homer/lib_local/metisMenu/dist/metisMenu.css" />
        <link rel="stylesheet" href="~/homer/css/style.css" asp-append-version="true" />
    </environment>
    <environment names="Staging, Production">
        <link rel="stylesheet" href="~/homer/lib_local/bootstrap/dist/css/bootstrap.min.css" />
        <link rel="stylesheet" href="~/homer/lib/fontawesome/css/font-awesome.min.css" />
        <link rel="stylesheet" href="~/homer/lib/animate.css/animate.min.css" />
        <link rel="stylesheet" href="~/homer/Icons/pe-icon-7-stroke/css/pe-icon-7-stroke.css" />
        <link rel="stylesheet" href="~/homer/lib_local/metisMenu/dist/metisMenu.min.css" />
        <link rel="stylesheet" href="~/homer/css/style.css" asp-append-version="true" />
    </environment>

    @Html.ApplicationInsightsJavaScript(TelemetryConfiguration)
</head>
<body class="@Html.PageClass() sidebar-scroll fixed-navbar fixed-small-header">
    <div class="splash">
        <div class="color-line"></div>
        <div class="title">
            <h1>SirmiumCommercial</h1>
            <div class="spinner">
                <div class="rect2"></div>
                <div class="rect3"></div>
                <div class="rect4"></div>
                <div class="rect5"></div>
            </div>
        </div>
    </div>
    <!--[if lt IE 7]>
        <p class="alert alert-danger">You are using an <strong>outdated</strong> browser.
            Please <a href="https://browsehappy.com/">upgrade your browser</a>
            to improve your experience.
        </p>
    <![endif]-->
    <!-- Header -->
    <div id="header">
        @Html.Partial("_UserHeader")
    </div>

    <!-- Navigation -->
    <div id="menu">
        @Html.Partial("_UserNavigation")
    </div>

    <!-- Main view -->
    <div id="wrapper">
        @RenderBody()

        <!-- Right sidebar-->
        @Html.Partial("_UserRightSidebar")
    </div>

    <!-- Footer -->
    <div class="m-lg" style="background: #f1f3f6">
        @Html.Partial("_Footer")
    </div>

    <environment names="Development">
        <script src="https://kit.fontawesome.com/93d875730e.js"></script>
        <script src="~/homer/lib_local/jquery/dist/jquery.js"></script>
        <script src="~/homer/lib/slimScroll/jquery.slimscroll.js"></script>
        <script src="~/homer/lib_local/bootstrap/dist/js/bootstrap.js"></script>
        <script src="~/homer/lib/iCheck/icheck.js"></script>
        <script src="~/homer/lib_local/metisMenu/dist/metisMenu.js"></script>
        <script src="~/homer/lib_local/sparkline/index.js"></script>
        <script src="~/homer/js/homer.js"></script>
        <script src="~/lib_local/sirmiumCustomWindow/sirmiumCustomWindow.js"></script>
        <script src="~/lib_local/aspnet-signalr/signalr.js"></script>
        <script type="text/javascript">

            function msgLine(msgCont) {
                var br = msgCont.indexOf("</br>");

                if (msgCont.length > 21)
                {
                    var line = msgCont.substring(0, 20);
                    return (br <= 20 && br != -1) ? msgCont.substring(0, br) + "..." : line + "...";
                }
                else
                {
                    return (br == -1) ? msgCont : msgCont.substring(0, br) + "...";
                }
            };

            var currentUser = document.getElementById('current-userId').value;
            var chatWindow = document.getElementById('chat-header-window');


            var connectionChatHeader = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();
            var connectionCommentNotification = new signalR.HubConnectionBuilder().withUrl("/commentsHub").build();
            var connectionVideoNotification = new signalR.HubConnectionBuilder().withUrl("/videoHub").build();
            var connectionNotificatino = new signalR.HubConnectionBuilder().withUrl("/notificationHub").build();

            //start connection for chatHub - chat header
            connectionChatHeader.start().then(function () {
                console.log("Connected: --chat header hub--");
            }).catch(function (err) {
                return console.error(err.toString());
            });

            //start connection for commentHub - comment notification
            connectionCommentNotification.start().then(function () {
                console.log("Connected: --comment notification--");
            }).catch(function (err) {
                return console.error(err.toString());
            });
            
            //start connection for videoHub - video notification
            connectionVideoNotification.start().then(function () {
                console.log("Connected: --video notification--");
            }).catch(function (err) {
                return console.error(err.toString());
            });
            
            //start connection for chatHub - chat header
            connectionNotificatino.start().then(function () {
                console.log("Connected: --notification hub--");
            }).catch(function (err) {
                return console.error(err.toString());
            });

            //functions for chat header
            connectionChatHeader.on("UserHeaderNewMsg", function (senderId, recipientId, cId, senderName,
                date, msgContent, unseenMsgs, senderPhoto, recipientPhoto, recipientName) {
                if (recipientId == currentUser) {
                    var chatId = "chat-header-" + cId;
                    var chatExists = document.getElementById(chatId);
                    if (chatExists != null) {
                        var chatIdJQ = "#chat-header-" + cId;
                        $(chatIdJQ).remove();
                    }
                    $('#chat-header-window').prepend(`
                            <a href="/Chat/Chat/`+ currentUser + `?user2Id=` + senderId + `"
                                    id="chat-header-` + cId + `">
                                <div class="chat-message m-b-xs" id="chat-style-` + cId + `"
                                        style="padding-left:0px; border-radius: 10px;
                                        border:2px solid #007bff; background-color: #e6f2ff;
                                        box-sizing: border-box">
                                    <img class="message-avatar m-l-md m-t-sm"
                                        src="` + senderPhoto + `" alt="">
                                    <div class="message" style="background: none;">
                                        <span class="message-author" style="color: #000000">` + senderName + `</span>
                                        <span>&emsp;</span><span>` + date + `</span>
                                        <span id='unseen-header-span-` + cId + `' class='badge badge-primary pull-right'
                                            style='font-size:10px; background-color: #007bff;'>`
                                            + unseenMsgs + `</span>
                                        <span class="message-content">` +  msgLine(msgContent) + `</span>
                                    </div>
                                </div>
                            </a>
                    `);

                    connectionChatHeader.invoke("TotalUnseenMsgHeader", currentUser)
                        .catch(function (err) {
                        return console.error(err.toString());
                    });
                }
                if (senderId == currentUser) {
                    var chatId = "chat-header-" + cId;
                    var chatExists = document.getElementById(chatId);
                    if (chatExists != null) {
                        var chatIdJQ = "#chat-header-" + cId;
                        $(chatIdJQ).remove();
                    }
                    $('#chat-header-window').prepend(`
                            <a href="/Chat/Chat/`+ currentUser + `?user2Id=` + recipientId + `"
                                    id="chat-header-` + cId + `">
                                <div class="chat-message m-b-xs" id="chat-style-` + cId + `"
                                        style="padding-left:0px; border-radius: 10px;
                                        border:1px solid #99caff;
                                        box-sizing: border-box">
                                    <img class="message-avatar m-l-md m-t-sm"
                                        src="` + recipientPhoto + `" alt="">
                                    <div class="message" style="background: none;">
                                        <span class="message-author" style="color: #000000">` + recipientName + `</span>
                                        <span>&emsp;</span><span>` + date + `</span>
                                        <span class="message-content">Me: ` + msgLine(msgContent) + `</span>
                                    </div>
                                </div>
                            </a>
                    `);
                }
            });

            connectionChatHeader.on("PostTotalUnseenHeader", function (userId, totalUnseenMsg) {
                if (currentUser == userId) {
                    $('#total-unseen-label').html("");
                    $('#total-unseen-label').append(`<i class="pe-7s-mail"></i>`);
                    if (totalUnseenMsg != 0) {
                        $('#total-unseen-label').append(`
                        <span class='label' style='background-color: #007bff;'>
                            ` + totalUnseenMsg + `
                        </span>
                        `);
                    }
                }
            });

            connectionChatHeader.on("UserHeaderNewLastMsg", function (senderId, recipientId, cId, senderName,
                date, msgContent, unseenMsgs, senderPhoto, recipientPhoto, recipientName) {
                if (recipientId == currentUser) {
                    var chatId = "chat-header-" + cId;
                    var chatDivId = document.getElementById(chatId);
                    if (chatDivId != null) {
                         var chatDivIdJQ = "#chat-header-" + cId;
                        $(chatDivIdJQ).empty();
                        $(chatDivIdJQ).append(`
                            <a href="/Chat/Chat/`+ currentUser + `?user2Id=` + senderId + `"
                                    id="chat-header-` + cId + `">
                                <div class="chat-message m-b-xs" id="chat-style-` + cId + `"
                                        style="padding-left:0px; border-radius: 10px;`
                                        + unseenExistsBorder(unseenMsgs) +
                                        `box-sizing: border-box">
                                    <img class="message-avatar m-l-md m-t-sm"
                                        src="` + senderPhoto + `" alt="">
                                    <div class="message" style="background: none;">
                                        <span class="message-author" style="color: #000000">` + senderName + `</span>
                                        <span>&emsp;</span><span>` + date + `</span>`
                                        + unseenExistsSpan(unseenMsgs) + `
                                        <span class="message-content">` +  msgLine(msgContent) + `</span>
                                    </div>
                                </div>
                            </a>
                        `);
                        connectionChatHeader.invoke("TotalUnseenMsgHeader", currentUser)
                            .catch(function (err) {
                            return console.error(err.toString());
                        });
                    }
                }
                else if (senderId == currentUser) {
                    var chatId = "chat-header-" + cId;
                    var chatDivId = document.getElementById(chatId);
                    if (chatDivId != null) {
                        console.log("Header works");
                        var chatDivIdJQ = "#chat-header-" + cId;
                        $(chatDivIdJQ).empty();
                        $(chatDivIdJQ).append(`
                            <a href="/Chat/Chat/`+ currentUser + `?user2Id=` + recipientId + `"
                                    id="chat-header-` + cId + `">
                                <div class="chat-message m-b-xs" id="chat-style-` + cId + `"
                                        style="padding-left:0px; border-radius: 10px;
                                        border:1px solid #99caff;
                                        box-sizing: border-box">
                                    <img class="message-avatar m-l-md m-t-sm"
                                        src="` + recipientPhoto + `" alt="">
                                    <div class="message" style="background: none;">
                                        <span class="message-author" style="color: #000000">` + recipientName + `</span>
                                        <span>&emsp;</span><span>` + date + `</span>
                                        <span class="message-content">Me: ` + msgLine(msgContent) + `</span>
                                    </div>
                                </div>
                            </a>
                        `);
                    }
                }
            });

            connectionChatHeader.on("CheckTotalUnseenHeader", function (user1, user2) {
                if (currentUser == user1 || currentUser == user2) {
                    connectionChatHeader.invoke("TotalUnseenMsgHeader", currentUser)
                        .catch(function (err) {
                        return console.error(err.toString());
                    });
                }
            });

            connectionChatHeader.on("HeaderMsgSeen", function (cId, userId) {
                if (currentUser == userId) {
                    var spanId = "#unseen-header-span-" + cId;
                    $(spanId).remove();
                    var divId = "chat-style-" + cId;
                    var div = document.getElementById(divId);
                    div.style.border = "1px solid #99caff";
                    div.style.backgroundColor = "";
                }
            });

            function unseenExistsBorder(n) {
                return (n > 0) ? "border:2px solid #007bff; background-color: #e6f2ff;"
                    : "border:1px solid #99caff;";
            };
            function unseenExistsSpan(n) {
                return (n > 0) ?
                    `<span id='unseen-span' class='badge badge-primary pull-right'
                     style='font-size:10px; background-color: #007bff;'>`
                     + n + `</span>` : "";
            };


            //functions for notifications
            //like & dislike comment
            connectionCommentNotification.on("ShowNewNotification", function (userId, notificationCardId,
                commentFor, commentForId, notificationCardMsg, notificationCardUserPhoto) {
                if (currentUser == userId) {

                    var link = "/Notification/Redirect/" +
                        userId + "?notificationCardId=" + notificationCardId +
                        "&amp;For=" + commentFor + "&amp;ForId=" + commentForId;

                    showNotification(notificationCardId,
                        notificationCardMsg, notificationCardUserPhoto, link);
                }
            });

            //new comment --course
            connectionCommentNotification.on("ShowNewCourseCommentNotification", function (userId, notificationCardId,
                notificationCourseId, notificationCardMsg, notificationCardUserPhoto) {
                if (currentUser == userId) {

                    var link = "/Notification/Redirect/" +
                        userId + "?notificationCardId=" + notificationCardId +
                        "&amp;For=Course&amp;ForId=" + notificationCourseId;

                    showNotification(notificationCardId,
                        notificationCardMsg, notificationCardUserPhoto, link);
                }
            });
            
            //new comment --video
            connectionCommentNotification.on("ShowNewVideoCommentNotification", function (userId, notificationCardId,
                notificationVideoId, notificationCardMsg, notificationCardUserPhoto) {
                if (currentUser == userId) {

                    var link = "/Notification/Redirect/" +
                        userId + "?notificationCardId=" + notificationCardId +
                        "&amp;For=Video&amp;ForId=" + notificationVideoId;

                    showNotification(notificationCardId,
                        notificationCardMsg, notificationCardUserPhoto, link);
                }
            });

            //video like & dislike notification
            connectionVideoNotification.on("ShowNewNotification", function (userId, notificationCardId,
                notificationVideoId, notificationCardMsg, notificationCardUserPhoto) {
                if (currentUser == userId) {

                    var link = "/Notification/Redirect/" +
                        userId + "?notificationCardId=" + notificationCardId +
                        "&amp;For=Video&amp;ForId=" + notificationVideoId;

                    showNotification(notificationCardId,
                        notificationCardMsg, notificationCardUserPhoto, link);
                }
            });

            //new user on course
            connectionNotificatino.on("ShowNewUserOnCourseNotification", function (userId,
                notificationCardId, notificationCourseId, notificationCardMsg, notificationCardUserPhoto) {
                if (currentUser == userId) {

                    var link = "/Notification/Redirect/" +
                        userId + "?notificationCardId=" + notificationCardId +
                        "&amp;For=Course&amp;ForId=" + notificationCourseId;

                    showNotification(notificationCardId,
                        notificationCardMsg, notificationCardUserPhoto, link);
                }
            });
            
            //new rating
            connectionNotificatino.on("ShowNewRatingNotification", function (userId,
                notificationCardId, notificationVideoId, notificationCardMsg, notificationCardUserPhoto) {
                if (currentUser == userId) {

                    var link = "/Notification/Redirect/" +
                        userId + "?notificationCardId=" + notificationCardId +
                        "&amp;For=Video&amp;ForId=" + notificationVideoId;

                    showNotification(notificationCardId,
                        notificationCardMsg, notificationCardUserPhoto, link);
                }
            });

            function showNotification(notificationCardId,
                notificationCardMsg, notificationCardUserPhoto, link) {

                //notification unseenLabel
                var unseenLabel = document.getElementById('notification-unseen-label');
                //if unseenLabel == null => totalUnseenNotification = 0
                if (unseenLabel == null) {
                    $('#unseen-label-wrapper').append(`
                            <span class='label label-info' id='notification-unseen-label'>1</span>
                        `);
                }
                else {
                    var totalUnssen = parseInt(document.getElementById('total-notification-unseen-input').value);
                    totalUnssen += 1;
                    $('#notification-unseen-label').html(totalUnssen.toString());
                }

                //notificationCard div
                var notificationDivIdJS = "notification-" + notificationCardId;
                var notificationDivIdJQ = "#notification-" + notificationCardId
                var notificationCardDiv = document.getElementById(notificationDivIdJS);

                //notificationCard exists
                if (notificationCardDiv != null) {
                    $(notificationDivIdJQ).remove();
                    $('#notification-menu').prepend(`
                            <a href="` + link + `"
                               id="notification-` + notificationCardId + `">
                                <div class="chat-message m-b-xs"
                                    style="border:2px solid #007bff; background-color: #e6f2ff;
                                           padding-left:0px; padding-top:10px; border-radius: 10px;
                                           box-sizing: border-box;">
                                    <img class="message-avatar m-l-md m-t-sm"
                                        src="` + notificationCardUserPhoto + `" alt="Photo">
                                    <div class="message" style="background: none;">
                                        <span class="message-content">
                                            ` + notificationCardMsg + `
                                        </span>
                                    </div>
                                </div>
                            </a>
                        `);
                }
                //if notificationCard not exists
                else {
                    $('#notification-menu').prepend(`
                            <a href="` + link + `"
                               id="notification-` + notificationCardId + `">
                                <div class="chat-message m-b-xs"
                                    style="border:2px solid #007bff; background-color: #e6f2ff;
                                           padding-left:0px; padding-top:10px; border-radius: 10px;
                                           box-sizing: border-box;">
                                    <img class="message-avatar m-l-md m-t-sm"
                                        src="` + notificationCardUserPhoto + `" alt="Photo">
                                    <div class="message" style="background: none;">
                                        <span class="message-content">
                                            ` + notificationCardMsg + `
                                        </span>
                                    </div>
                                </div>
                            </a>
                        `);
                }
            };
        </script>
    </environment>
    <environment names="Staging,Production">
        <script src="https://kit.fontawesome.com/93d875730e.js"></script>
        <script src="~/homer/lib_local/jquery/dist/jquery.min.js"></script>
        <script src="~/homer/lib/slimScroll/jquery.slimscroll.min.js"></script>
        <script src="~/homer/lib_local/bootstrap/dist/js/bootstrap.min.js"></script>
        <script src="~/homer/lib/iCheck/icheck.min.js"></script>
        <script src="~/homer/lib_local/metisMenu/dist/metisMenu.min.js"></script>
        <script src="~/homer/lib_local/sparkline/index.js"></script>
        <script src="~/homer/js/homer.min.js"></script>
        <script src="~/lib_local/sirmiumCustomWindow/sirmiumCustomWindow.js"></script>
        <script src="~/lib_local/aspnet-signalr/signalr.min.js"></script>
        <script type="text/javascript">
            var currentUser = document.getElementById('current-userId').value;
            var chatWindow = document.getElementById('chat-header-window');

            var connectionChatHeader = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

            //start connection
            connectionChatHeader.start().then(function () {
                console.log("Connected");
            }).catch(function (err) {
                return console.error(err.toString());
            });

            connectionChatHeader.on("UserHeaderNewMsg", function (senderId, recipientId, cId, senderName,
                date, msgContent, unseenMsgs, senderPhoto) {
                if (recipientId == currentUser) {
                    console.log("UserHeaderNewMsg");
                    var chatId = "chat-header-" + cId;
                    var chatExists = document.getElementById(chatId);
                    if (chatExists != null) {
                        var chatIdJQ = "#chat-" + cId;
                        $(chatIdJQ).remove();
                    }
                    $('#chat-window').prepend(`
                            <a href="/Chat/Chat/`+ currentUser + `?user2Id=` + senderId + `"
                                    id="chat-` + cId + `">
                                <div class="chat-message m-b-xs"
                                        style="padding-left:0px; border-radius: 10px;
                                        border:2px solid #007bff; background-color: #e6f2ff;
                                        box-sizing: border-box">
                                    <img class="message-avatar m-l-md m-t-sm"
                                        src="` + senderPhoto + `" alt="">
                                    <div class="message" style="background: none;">
                                        <span class="message-author" style="color: #000000">` + senderName + `</span>
                                        <span>&emsp;</span><span>` + date + `</span>
                                        <span id='unseen-span' class='badge badge-primary pull-right'
                                            style='font-size:10px; background-color: #007bff;'>`
                        + unseenMsgs + `</span>
                                        <span class="message-content">` + msgContent + `</span>
                                    </div>
                                </div>
                            </a>
                        `);
                }
            });
        </script>
    </environment>

    @RenderSection("Scripts", required: false)
</body>
</html>