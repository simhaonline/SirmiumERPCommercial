<div id="right-sidebar" class="animated fadeInRight">

    <div class="p-m">
        <button id="sidebar-close" class="right-sidebar-toggle sidebar-button btn btn-default m-b-md">
            <i class="pe pe-7s-close"></i>
        </button>
        <div class="profile-picture">
            @await Component.InvokeAsync("UserRightSidebar", new { userId = ViewData["Id"] })

            <ul class="nav metismenu" id="side-menu">
                <li class="@Html.IsSelected(controller: "User")">
                    <a href="@Url.Action("UserProfile", "User", new { id = ViewData["Id"],
                        userId = ViewData["Id"]})">
                        <span class="fa fa-user"></span>
                        <span class="nav-label">Profile</span>
                    </a>
                </li>
                <li class="@Html.IsSelected(controller: "User")">
                    <a href="@Url.Action("EditProfile", "User", new { id = ViewData["Id"] })">
                        <span class="fa fa-edit"></span>
                        <span class="nav-label">Edit</span>
                    </a>
                </li>
                <li class="@Html.IsSelected(controller: "User")">
                    <a href="@Url.Action("Settings", "User")">
                        <span class="fa fa-cog"></span>
                        <span class="nav-label">Settings</span>
                    </a>
                </li>
                <li class="@Html.IsSelected(controller: "Account")">
                    <a href="@Url.Action("Logout", "Account")">
                        <span class="fa fa-sign-out"></span>
                        <span class="nav-label">Logout</span>
                    </a>
                </li>
            </ul>
        </div>
    </div>
</div>
