<div id="navigation">

    <ul class="nav metismenu" id="side-menu">
        <li class="@Html.IsSelected(controller: "User")">
            <a href="@Url.Action("Index", "User",
                    new { id = ViewData["Id"], sort = "Date Modified",
                                order = "desc"})">
                <span class="fa fa-home @Html.IsSelected(controller: "User",
                                       action: "Index")"></span>
                <span class="nav-label @Html.IsSelected(controller: "User",
                                       action: "Index")">Home</span>
            </a>
        </li>
        <li class="@Html.IsSelected(controller: "Groups")">
            <a href="@Url.Action("Groups", "Groups", new { id = ViewData["Id"] })">
                <span class="fa fa-users @Html.IsSelected(controller: "Groups",
                                       action: "Groups")"></span>
                <span class="nav-label @Html.IsSelected(controller: "Groups",
                                       action: "Groups")">Groups</span>
            </a>
        </li>
        <li class="@Html.IsSelected(controller: "Company")">
            <a href="@Url.Action("AllUsers", "Company", new { id = ViewData["Id"] })">
                <span class="fa fa-industry @Html.IsSelected(controller: "Company",
                                       action: "AllUsers")"></span>
                <span class="nav-label @Html.IsSelected(controller: "Company",
                                       action: "AllUsers")">My Company</span>
            </a>
        </li>

        @await Component.InvokeAsync("UserLeftNavigationManage", new { userId = ViewData["Id"] })

        <li class="@Html.IsSelected(controller: "Courses")">
            <a href="@Url.Action("Courses", "User")">
                <span class="fa fa-book @Html.IsSelected(controller: "Courses")"></span>
                <span class="nav-label @Html.IsSelected(controller: "Courses")">Courses</span>
                <span class="fa arrow @Html.IsSelected(controller: "Courses")"></span>
            </a>
            <ul class="nav nav-second-level">
                <li class="@Html.IsSelected(action: "MyCourses")">
                    <a href="@Url.Action("MyCourses", "Courses",
                            new { id = ViewData["Id"], sort = "Date Added",
                                order = "desc"})">
                        <span class="@Html.IsSelected(action: "MyCourses")">
                            My Courses
                        </span>
                    </a>
                </li>
                <li class="@Html.IsSelected(action: "AllCourses")">
                    <a href="@Url.Action("AllCourses", "Courses",
                            new { id = ViewData["Id"], sort = "Date Added",
                                order = "desc"})">
                        <span class="@Html.IsSelected(action: "AllCourses")">
                            All Courses
                        </span>
                    </a>
                </li>
            </ul>
        </li>
        <li class="@Html.IsSelected(controller: "Files")">
            <a href="#">
                <span class="fa fa-files-o @Html.IsSelected(controller: "Files")"></span>
                <span class="nav-label @Html.IsSelected(controller: "Files")">Files</span>
                <span class="fa arrow @Html.IsSelected(controller: "Files")"></span>
            </a>
            <ul class="nav nav-second-level">
                <li class="@Html.IsSelected(action: "MyFiles")">
                    <a href="@Url.Action("MyFiles", "Files", new { id = ViewData["Id"] })">
                        <span class="@Html.IsSelected(action: "MyFiles")">
                            My Files
                        </span>
                    </a>
                </li>
                <li class="@Html.IsSelected(action: "SharedFiles")">
                    <a href="@Url.Action("SharedFiles", "Files", new { id = ViewData["Id"] })">
                        <span class="@Html.IsSelected(action: "SharedFiles")">
                            Shared Files
                        </span>
                    </a>
                </li>
            </ul>
        </li>
        <li class="@Html.IsSelected(controller: "Video")">
            <a href="#">
                <span class="fa fa-play @Html.IsSelected(controller: "Video")"></span>
                <span class="nav-label @Html.IsSelected(controller: "Video")">Video</span>
                <span class="fa arrow @Html.IsSelected(controller: "Video")"></span>
            </a>
            <ul class="nav nav-second-level">
                <li class="@Html.IsSelected(action: "MyGallery")">
                    <a href="@Url.Action("MyGallery", "Video", new { id = ViewData["Id"] })">
                        <span class="@Html.IsSelected(action: "MyGallery")">
                            My Gallery
                        </span>
                    </a>
                </li>
                <li class="@Html.IsSelected(action: "VideoGallery")">
                    <a href="@Url.Action("VideoGallery", "Video", new { id = ViewData["Id"] })">
                        <span class="@Html.IsSelected(action: "VideoGallery")">
                            Video Gallery
                        </span>
                    </a>
                </li>
            </ul>
        </li>
        <li class="@Html.IsSelected(controller: "Reporting")">
            <a href="#">
                <span class="fa fa-bar-chart @Html.IsSelected(controller: "Reporting")"></span>
                <span class="nav-label @Html.IsSelected(controller: "Reporting")">Reports</span>
                <span class="fa arrow @Html.IsSelected(controller: "Reporting")"></span>
            </a>
            <ul class="nav nav-second-level">
                @await Component.InvokeAsync("UserLeftNavigationReporting", new { userId = ViewData["Id"] })
            </ul>
        </li>

        @await Component.InvokeAsync("UserLeftNavigation", new { userId = ViewData["Id"] })
    </ul>
</div>