@model GroupDetailsViewModel

@{
    Layout = "_UserLayout";
    ViewData["Title"] = $"Group -- {Model.Group.Name}";
}
@section Styles {
    <environment names="Development,Staging,Production">
        <link rel="stylesheet" href="~/lib_local/css_local/UserLocal.css" />
        <link rel="stylesheet" href="~/lib_local/videoPlayer/videoPlayer.css" />
    </environment>
}
<style type="text/css">
    .videoBtn {
        display: none;
        position: absolute;
        top: 38%;
        left: 2%;
    }

    .img-video:hover + .videoBtn {
        display: inline;
    }

    .videoBtn:hover {
        display: inline;
    }

    #video-video:hover {
        opacity: 0.4;
    }

    #video-videoBtn:hover > #video-video {
        opacity: 0.4;
    }

    #all-users {
        height: 200px;
        width: 200px;
        overflow-y: scroll;
    }
</style>

<!--Warning Window-->
<div id="customWarningDialog"></div>

<!--Header-->
<div class="normalheader p-sm">
    <div class="hpanel">
        <div class="panel-body" style="font-size: 30px;">
            <div class="col-lg-3">
                <span class="fa fa-users"></span>
                <span class="text-primary">@Model.Group.Name</span>
            </div>
            @if (Model.Group.CreatedBy.Id == ViewData["Id"].ToString())
            {
                <div class="dropdown pull-right text-center col-lg-2">
                    <a class="dropdown-toggle btn" href="#" data-toggle="dropdown">
                        <span class="fa fa-cogs text-primary" style="font-size: 25px;"></span>
                        <span class="text-muted" style="font-size: 25px;">Settings</span>
                    </a>
                    <div class="dropdown-menu hdropdown bigmenu animated flipInX">
                        <table>
                            <tbody>
                                <tr>
                                    <td>
                                        <a onclick="CustomWarningWindow.show(
                                        'Are you sure you want to delete @Model.Group.Name?',
                                        'Yes, delete it!',
                                        '@Url.Action("DeleteGroup", "Groups",
                                            new { id = ViewData["Id"],
                                                groupId = Model.Group.GroupId })')"
                                           class="btn btn-outline btn-danger2">
                                            Delete <br /> <i class="far fa-trash-alt"></i>
                                        </a>
                                    </td>
                                    <td>
                                        <a onclick="groupNewCourses.show();"
                                           class="btn btn-outline btn-success m-t-md">
                                            Add Course <br /> <i class="fas fa-plus"></i>
                                        </a>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <a onclick="groupEdit.show();"
                                           class="btn btn-outline btn-warning2 m-t-md">
                                            Edit <br /> <i class="far fa-edit"></i>
                                        </a>
                                    </td>
                                    <td>
                                        <a onclick="groupNewUsers.show()"
                                           class="btn btn-outline btn-primary m-t-md">
                                            Add User <br /> <i class="fas fa-user-plus"></i>
                                        </a>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!--Details-->
<div class="row m-l-md m-r-md">
    <div class="col-lg-12">
        <div class="hpanel m-b-xs">
            <div class="panel-heading">
                <div class="panel-tools">
                    <a class="showhide"><i class="fa fa-chevron-up" style="font-size:20px"></i></a>
                </div>
                <h3 class="m-n">
                    <span class="fas fa-info text-info"></span>
                    <span class="text-muted"> Details:</span>
                </h3>
            </div>

            <div class="panel-body">
                <div class="row">
                    <div class="col-lg-3">
                        <h5 class="text-muted">Created by:</h5>
                        <h4 class="text-info font-bold">
                            <img class="img-circle" style="width: 30px; height: 30px"
                                 src="@Model.userPhoto(Model.Group.CreatedBy.ProfilePhotoUrl)" />
                            <a href="@Url.Action("UserProfile", "User",
                                    new { id = ViewData["Id"], userId = Model.Group.CreatedBy.Id })">
                                @Model.firstLastNameExists(Model.Group.CreatedBy)
                            </a>
                        </h4>
                    </div>
                    <div class="col-lg-9">
                        <div class="panel-body m-t-xs" style="padding-top:0px">
                                <h4 class="text-info">Description:</h4>
                                <span>@Model.Group.Description</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--Users-->
<div class="row m-l-md m-r-md">
    <div class="col-lg-12">
        <div class="hpanel m-b-xs panel-collapse">
            <div class="panel-heading">
                <div class="panel-tools" style="font-size:15px">
                    <span class="text-muted">Total Users:</span>
                    @if (Model.Users.Count() == 0)
                    {
                        <span class="text-warning">0</span>
                    }
                    else
                    {
                        <span class="text-primary">@Model.Users.Count()</span>
                    }
                    <a class="showhide"><i class="fa fa-chevron-down" style="font-size:20px"></i></a>
                </div>
                <h3 class="m-n">
                    <span class="fas fa-users text-success"></span>
                    <span class="text-muted"> Users:</span>
                </h3>
            </div>
            <div class="panel-body" style="display: none">
                <div class="row">
                    @{
                        var borderTop = new List<String>{"hviolet", "hred", "hgreen", "hyellow",
                            "hblue", "hnavyblue", "horange", "hreddeep"};
                        var j = 0;
                    }
                    @foreach (AppUser user in Model.Users)
                    {
                        <div class="col-lg-3">
                            <div class="hpanel contact-panel @borderTop[j]">
                                <div class="panel-body" style="display: none">
                                    @if (user.ProfilePhotoUrl == null)
                                    {
                                        <img src="~/defaultAvatar.png" class="img-circle m-b"
                                             alt="logo" />
                                    }
                                    else
                                    {
                                        <img src="~/UsersData/@user.ProfilePhotoUrl"
                                             class="img-circle m-b" alt="logo" />
                                    }

                                    @if (Model.Group.CreatedBy.Id == ViewData["Id"].ToString()
                                            && user.Id != Model.Group.CreatedBy.Id)
                                    {
                                        <div class="dropdown pull-right">
                                            <a class="dropdown-toggle" href="#" data-toggle="dropdown">
                                                <i class="pe-7s-more"></i>
                                            </a>
                                            <div class="dropdown-menu hdropdown bigmenu animated fadeInDown"
                                                 style="padding: 10px 10px 0 10px;">
                                                <table>
                                                    <tbody>
                                                        <tr>
                                                            <td>
                                                                <a href="@Url.Action("RemoveUserFromGroup", new {
                                                                        adminId = ViewData["Id"],
                                                                        groupId = Model.Group.GroupId,
                                                                        userId = user.Id
                                                                    })"
                                                                   style="font-size: 20px; margin-bottom: 10px;">
                                                                    <span class="fa fa-user-minus text-muted"></span>
                                                                    Remove
                                                                </a>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    }

                                    <h3>@user.FirstName <br /> @user.LastName</h3>
                                    <a href="@Url.Action("UserProfile", "User",
                                        new { id = ViewData["Id"], userId = user.Id })">
                                        <span class="text-muted font-bold m-b-xs text-info">
                                            &#64;@user.UserName
                                        </span>
                                    </a><br />
                                    <div class="row">
                                        <a href="@Url.Action("Chat", "Chat",
                                    new { id = ViewData["Id"], user2Id = user.Id})"
                                           class="btn btn-primary pull-right m-r-sm">
                                            Message <span class="pe pe-7s-chat"></span>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        if (j == 7) { j = 0; } else { j++; }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!--Courses-->
<div class="row m-l-md m-r-md">
    <div class="col-lg-12" style="padding-bottom: 20px;">
        <div class="hpanel m-b-xs panel-collapse">
            <div class="panel-heading">
                <div class="panel-tools" style="font-size:15px">
                    <span class="text-muted">Total Courses:</span>
                    @if (Model.Courses.Count() == 0)
                    {
                        <span class="text-warning">0</span>
                    }
                    else
                    {
                        <span class="text-primary">@Model.Courses.Count()</span>
                    }
                    <a class="showhide"><i class="fa fa-chevron-down" style="font-size:20px"></i></a>
                </div>
                <h3 class="m-n">
                    <span class="fas fa-book text-primary"></span>
                    <span class="text-muted"> Courses:</span>
                </h3>
            </div>

            <div style="max-height: 560px; overflow-y: scroll;">
                @foreach (GroupCourseDetails course in Model.Courses)
                {
                    <div class="panel-body" style="padding-bottom: 5px; display: none">
                        <div class="row">
                            @if (course.Video != null)
                            {
                                <div class="col-lg-3">
                                    <div id="video-videoBtn"
                                         style="background-color: #0c0830; padding:0px">
                                        <video src="@course.Video.VideoPath" class="img-video"
                                               style="z-index: 1" id="video-video"></video>
                                        <div class="text-center img-video videoBtn" style="z-index: 1">
                                            <a href="@Url.Action("Index", "Recorder",
                                    new { id = ViewData["Id"], videoId = course.Video.Id })"
                                               class="btn btn-sm btn-primary2 p-xs">
                                                <span style="font-weight: 400; font-size: 18px">Watch</span>
                                                <span class="fa fa-play" style="font-size: 18px"></span>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="col-lg-3">
                                    <div class="text-center p-lg" style="width: 100%; height: 80%;
                                    background-color: #bbbbbb;">
                                        <strong style="color:#34495e; font-size:20px;
                                            font-family: 'Open Sans','Helvetica Neue',
                                            Helvetica,Arial,sans-serif; ">
                                            SirmiumCommercial
                                        </strong>
                                        <br />
                                        <br />
                                        <i style="font-size: 45px; color:#5b80a4;" class="fas fa-video-slash"></i>
                                        <br />
                                        <strong style="font-size: 25px; color:#5b80a4;">NO VIDEO</strong>
                                    </div>
                                </div>
                            }
                            <div class="col-lg-4">
                                <a href="@Url.Action("CourseDetails", "Courses",
                                    new { id = ViewData["Id"],
                                    courseId = course.Course.CourseId})"
                                   class="m-b-sm btn" style="margin:0px; padding-left:0px;">
                                    <span class="text-primary" style="font-size: 25px;
                                        font-weight: 700">
                                        @course.Course.Title
                                    </span>
                                </a>
                                <h5 class="text-muted">Created by:</h5>
                                <h4 class="text-info font-bold">
                                    <img class="img-circle" style="width: 30px; height: 30px"
                                         src="@Model.userPhoto(course.Course.CreatedBy.ProfilePhotoUrl)" />
                                    <a href="@Url.Action("UserProfile", "User",
                                    new { id = ViewData["Id"], userId = course.Course.CreatedBy.Id })">
                                        @Model.firstLastNameExists(course.Course.CreatedBy)
                                    </a>
                                </h4>
                                <h5 class="text-muted">Published on: </h5>
                                <h4>@course.Course.DateAdded.ToLongDateString()</h4>
                                <h5 class="text-muted">End in: </h5>
                                <h4>@Html.Raw(Model.DateDifference(course.Course.EndDate))</h4>
                            </div>
                            <div class="col-lg-3">
                                <h5 class="text-muted">Users on course: </h5>
                                @if (course.CourseUsers.Count() == 0)
                                {
                                    <strong class="text-muted">
                                        There are no users on this course
                                    </strong>
                                }

                                @foreach (AppUser user in course.CourseUsers.Take(4))
                                {
                                    <a href="@Url.Action("UserProfile", "User",
                                            new { id = ViewData["Id"],
                                                userId = user.Id
                                            })" style="margin: 0px;">
                                        <img class="img-circle"
                                             style="width: 30px; height: 30px"
                                             src="@Model.userPhoto(user.ProfilePhotoUrl)"
                                             data-toggle='tooltip' data-placement='bottom'
                                             title="@Model.firstLastNameExists(user)" />
                                    </a>
                                }
                                @if (course.CourseUsers.Count() > 4)
                                {
                                    <br />
                                    @foreach (AppUser user in course.CourseUsers
                                    .Skip(4).Take(3))
                                    {
                                        <a href="@Url.Action("UserProfile", "User",
                                                new
                                                {
                                                    id = ViewData["Id"],
                                                    userId = user.Id
                                                })" style="margin: 0px;">
                                            <img class="img-circle"
                                                 style="width: 30px; height: 30px"
                                                 src="@Model.userPhoto(user.ProfilePhotoUrl)"
                                                 data-toggle='tooltip' data-placement='bottom'
                                                 title="@Model.firstLastNameExists(user)" />
                                        </a>

                                    }
                                    @if (course.CourseUsers.Count() > 7)
                                    {
                                        <span class="dropdown">
                                            <a class="dropdown-toggle btn btn-circle"
                                               style="width: 30px; background: #bbbbbb"
                                               data-toggle='dropdown' href="#">
                                                <span class="pe-7s-more"></span>
                                            </a>
                                            <span class="dropdown-menu hdropdown p-xs
                                                      bigmenu animated flipInX"
                                                  style="padding: 0px;" id="all-users">
                                                @foreach (AppUser user in course.CourseUsers.Skip(7))
                                                {
                                                    <a href="@Url.Action("UserProfile", "User",
                                                    new
                                                    {
                                                        id = ViewData["Id"],
                                                        userId = user.Id
                                                    })" style="margin: 0px;">
                                                        <img class="img-circle m-b-xs"
                                                             style="width: 30px; height: 30px"
                                                             src="@Model.userPhoto(user.ProfilePhotoUrl)" />
                                                        <span class="m-b-xs">@Model.firstLastNameExists(user)</span>
                                                    </a>
                                                    <br />
                                                }
                                            </span>
                                        </span>
                                    }
                                }
                            </div>
                            @if (Model.Group.CreatedBy.Id == ViewData["Id"].ToString())
                            {
                                <div class="dropdown pull-right" style="margin-right: 15px;">
                                    <a class="dropdown-toggle" href="#" data-toggle="dropdown">
                                        <i class="pe-7s-more"></i>
                                    </a>
                                    <div class="dropdown-menu hdropdown bigmenu animated fadeInDown"
                                         style="padding: 10px 10px 0 10px;">
                                        <table>
                                            <tbody>
                                                <tr>
                                                    <td>
                                                        <a href="@Url.Action("RemoveCourseFromGroup", new {
                                                                        adminId = ViewData["Id"],
                                                                        groupId = Model.Group.GroupId,
                                                                        courseId = course.Course.CourseId
                                                                    })"
                                                           style="font-size: 20px; margin-bottom: 10px;">
                                                            <span class="fa fa-book text-muted"></span>
                                                            <span class="fa fa-minus text-muted" style="font-size:10px;">
                                                            </span>
                                                            Remove
                                                        </a>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!--Group edit window-->
<div id="group-edit-window" class="dlg-container" style="display: none;">
    <div class="text-center" style="font-size:30px;">
        <span class="fa fa-edit text-muted"></span>
        <span class="text-muted">Edit</span>
    </div>
    <div class="dlg-body">
        <form asp-action="EditGroup" asp-controller="Groups" method="post">
            <input asp-for="Group.GroupId" value="@Model.Group.GroupId" hidden />
            <div class="form-group">
                <label>Group Name:</label>
                <input asp-for="Group.Name" value="@Model.Group.Name" class="form-control" />
            </div>
            <div class="form-group">
                <label>Description:</label>
                <textarea asp-for="Group.Description" type="text"
                          class="form-control">
                    @Model.Group.Description
                </textarea>
            </div>
            <div class="dlg-footer">
                <a onclick="groupEdit.close()" class="">Cancel</a>
                <button type="submit" style="background: #62cb31; color: #fff">
                    Save
                </button>
            </div>
        </form>
    </div>
</div>

<!--Group new users window-->
<div id="group-new-users-window" style="display: none;">
    @await Component.InvokeAsync("GroupsNewUsers", new { groupId = Model.Group.GroupId })
</div>

<!--Group new courses window-->
<div id="group-new-courses-window" style="display: none;">
    @await Component.InvokeAsync("GroupsNewCourses", new { groupId = Model.Group.GroupId })
</div>

@section Scripts {
    <environment names="Development,Staging,Production">
    </environment>
    <script type="text/javascript">
        //group edit window
        var groupEditWindow = document.getElementById('group-edit-window');

        var groupEdit = new function () {
            this.show = function () {
                groupEditWindow.style.display = '';
                freezeLayer.style.display = '';
            };
            this.close = function () {
                groupEditWindow.style.display = 'none';
                freezeLayer.style.display = 'none';
            };
        };

        //group new users
        var groupNewUsersWindow = document.getElementById('group-new-users-window');

        var groupNewUsers = new function () {
            this.show = function () {
                groupNewUsersWindow.style.display = '';
                freezeLayer.style.display = '';
            };
            this.close = function () {
                groupNewUsersWindow.style.display = 'none';
                freezeLayer.style.display = 'none';
            };
        };

        //group new courses
        var groupNewCoursesWindow = document.getElementById('group-new-courses-window');

        var groupNewCourses = new function () {
            this.show = function () {
                groupNewCoursesWindow.style.display = '';
                freezeLayer.style.display = '';
            };
            this.close = function () {
                groupNewCoursesWindow.style.display = 'none';
                freezeLayer.style.display = 'none';
            };
        };
    </script>
}

